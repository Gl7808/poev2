@charset "UTF-8";
.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  padding: 0 !important;
  border: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0, 0, 0, 0) !important;
  overflow: hidden !important;
}

body {
  font-size: clamp(16px, 1.25vw, 18px);
  font-family: var(--font-family-base);
  font-weight: 400;
  line-height: 1.28;
  background-color: var(--color-dark-800);
  color: var(--color-light-800);
}

a,
button,
input,
textarea,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  text-decoration: none;
  color: inherit;
}
a:hover {
  color: var(--color-accent-blue);
}

h2, h3, h4 {
  font-weight: 600;
}

h1 {
  font-weight: 700;
  font-size: clamp(63px, 5.5555555556vw, 80px);
}

h2 {
  font-size: clamp(40px, 3.6111111111vw, 52px);
}

h3 {
  font-size: clamp(22px, 1.875vw, 27px);
}

:root {
  --color-light-900: #FFFFFF;
  --color-light-800: #e7e7e7;
  --color-light-700: #d7d7d7;
  --color-light-600: #ababab;
  --color-light-500: #7e7e7e;
  --color-dark-900: #000000;
  --color-dark-800: #101010;
  --color-dark-700: #151515;
  --color-dark-600: #333333;
  --color-dark-500: #4f4f4f;
  --color-succsess: #59D499;
  --color-accent-blue: #56C2FF;
  --color-accent-red: #FF6363;
  --color-accent-orange: #ff8d63;
  --color-accent-purple: #A485FF;
  --color-accent-glow: #FFE2E2;
  --color-dark-alternate: #170e2f;
  --font-family-base: "Inter", sans-serif;
  --container-width: 1280px;
  --container-padding-x: 32px;
  --section-padding-y: 256px;
  --border-radius: 12px;
  --border-radius-medium: 8px;
  --border-radius-small: 6px;
  --border-radius-button: 8px;
  --button-height: 44px;
  --input-height: 46px;
  --transition-duration: 0.3s;
}

/**
  Нормализация блочной модели
 */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями
 */
img {
  display: block;
  max-width: 100%;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
}

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Приводим к единому цвету svg-элементы
 */
svg *[fill] {
  fill: currentColor;
}

svg *[stroke] {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
.header {
  padding: 20px;
}
.header__inner {
  display: flex;
  justify-content: space-between;
}
.header__logo {
  text-transform: uppercase;
}
.header__list {
  display: flex;
  gap: 20px;
}
.header__list-item {
  text-transform: uppercase;
}

.r {
  color: var(--color-accent-red);
}

.g {
  color: var(--color-succsess);
}

.b {
  color: var(--color-accent-blue);
}

.gem__list {
  display: flex;
  flex-direction: column;
  gap: 5px;
}
.gem__list-item {
  padding: 3px;
  border: 1px solid var(--color-dark-700);
}

.items__start-list {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  gap: 10px;
  border-radius: var(--border-radius-medium);
}
.items__start-item {
  padding: 10px;
  display: grid;
  align-items: center;
  background-color: var(--color-dark-700);
}
.items__start-item-link {
  height: 40px;
  width: 40px;
  margin-top: 10px;
  border: 2px solid var(--color-succsess);
  background-color: var(--color-succsess);
  border-radius: var(--border-radius-medium);
  text-align: center;
  align-items: center;
  display: flex;
  justify-content: center;
}
.items__start-item-link:hover {
  color: var(--color-light-900);
  background-color: var(--color-succsess);
}

/*# sourceMappingURL=style.css.map */
